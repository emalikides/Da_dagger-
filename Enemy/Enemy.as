package Enemy {	import flash.geom.Point;	import flash.display.MovieClip;	import Player.Player;	/*class that abstractly defines the type enemy, the character a player must beat.	An enemy has two basic attacks and a super attack, for which it must charge up.				*/	public class Enemy extends Player.Player {						//constructor function.		//health, lives, attackframes, mveframes, effects array, number of jump frame, speed, endurance, width, height, position		public function Enemy(h:Number, nos:Array, eff:Array, jmpno:int, sp:Number, 		 en:Number, wdth:Number,hght:Number, position:Point) {			super(h, 0, nos, eff, jmpno, sp, en, wdth,hght, position)		}				//function to decrement the enemies health.		public override function sicken(amount:Number) {			health -= amount;			if (health<=0) {				alive = false;			}			trace("I'm hit!", health);			//the enemies slowly fade away.			alpha -= 0.10;			//the enemy falls through the floor?			//hitbottom=false; 		}				//function defining the AI, takes a number that determines what part of the sequence the enemy		//is up to.		public function enemyControl(i:int) {			if (Math.round(i/30)*30-i==0) {//fcalled[2]=true;			fcalled[1]=!fcalled[1];			fcalled[0]=!fcalled[1];}						if (Math.round(i/27)*27-i==0) {				//fcalled[2]=!fcalled[2];			}	}						//function that updates the velocity of the enemy (similar to player).		public override function updatev(gravity:Number) {						//update the velocity and decide what attacks this player must do:			if (fcalled[0]) {				run(left);			}			if (fcalled[1]) {				run(right);			}			if (fcalled[2]) {				run(up);			}			//if the super attack is called, don't do any other attacks.			if (fcalled[5]) {				if (!fcalled[2]) run(up);				attack(2);				power=0;				fcalled[6]=false;			} else if (fcalled[3]) {				attack(0);			} else if (fcalled[4]) {				attack(1);			}			if (!hitbottom) {				vel[1]+=gravity;			}		}	}}